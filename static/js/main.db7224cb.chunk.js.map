{"version":3,"sources":["components/WeatherCard.jsx","App.js","api.js","reportWebVitals.js","index.js"],"names":["WeatherCard","_ref","_weather$main","_weather$main2","_weather$main3","_weather$main4","weather","React","createElement","className","name","sys","country","description","alt","src","concat","icon","Math","round","main","temp","feels_like","toFixed","humidity","pressure","App","city","setCity","useState","setWeather","error","setError","onSubmit","async","event","preventDefault","console","log","process","REAC_APP_API_KEY","url","response","axios","get","data","fetchWeather","type","placeholder","value","onChange","target","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.db7224cb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WeatherCard = ({ weather }) => {\r\n    return (\r\n        <div className=\"weather-card\">\r\n            <div className=\"card-header\">\r\n                <div>\r\n                    <p className=\"weather-city\">\r\n                        {weather ? weather.name + \" \" + weather.sys.country : \"-\"}</p>\r\n                    <p className=\"weather-description\">\r\n                        {weather ? weather.weather[0].description : \"-\"}</p>\r\n                </div>\r\n                <img alt={'weather'} className={\"weather-icon\"}\r\n                    src={`icons/${weather ? weather.weather[0].icon : \"unknown\"}.png`} />\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h2 className=\"weather-temp\">\r\n                    {weather ? Math.round(weather.main?.temp - 273.15) : \"\"}°C</h2>\r\n                <div className=\"weather-details\">\r\n                    <div className=\"parameters\">\r\n                        <span className=\"param-label\">Details</span>\r\n                    </div>\r\n                    <div className=\"parameters\">\r\n                        <span className=\"param-label\">Feels Like:</span>\r\n                        <span className=\"param-val\">\r\n                            {weather ? (weather.main?.feels_like - 273.15).toFixed(2) : \"-\"} °C\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"parameters\">\r\n                        <span className=\"param-label\">Humidity: </span>\r\n                        <span className=\"param-val\">\r\n                            {weather ? weather.main?.humidity : \"-\"} %</span>\r\n                    </div>\r\n                    <div className=\"parameters\">\r\n                        <span className=\"param-label\">Pressure: </span>\r\n                        <span className=\"param-val\">\r\n                            {weather ? weather.main?.pressure : \"-\"} hPs</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;","import React from 'react'\nimport './App.css';\nimport { useState} from 'react';\nimport {fetchWeather} from './api.js';\nimport WeatherCard from './components/WeatherCard.jsx'\nfunction App() {\n  const [city,setCity]=useState('');\n  const [weather,setWeather]=useState(null);\n  const [error,setError]=useState('');\n\n  const handleChange =(event)=>{\n    setCity(event.target.value);\n  };\n  const handleSubmit =async (event)=>{\n    event.preventDefault();\n    try {\n      const weather =await fetchWeather(city,setError);\n      setWeather(weather);\n    } catch (error) {\n      setError(\"City not found\");\n    }\n  }\n  return (\n    <div className='App'>\n      <h1 className='app_heading'>Weather app</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n        type='text'\n        placeholder='Enter city'\n        value={city}\n        onChange={handleChange}\n        />\n        <button type='submit'>Search</button>\n      </form>\n      {error ? (\n        <p className='error'>{error}</p>\n      ):(\n        <WeatherCard weather={weather}/>\n      )\n    }\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n export async function fetchWeather(city,setError){\r\n    console.log(process.env.REAC_APP_API_KEY);\r\n    const url =`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=07848c80e5e86e803fb1770303bfa3c2`;\r\n    try {\r\n        const response =await axios.get(url); \r\n        setError(\"\");\r\n        return response.data;\r\n    } catch (error) {\r\n        setError(\"City not found!\");\r\n        return error;\r\n    }\r\n }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}